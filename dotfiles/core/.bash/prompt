#!/bin/bash

function _echo_ps1 {
  # Make a local copy of $PWD so that we can change it without affecting the
  # actual value.
  local PWD=$PWD

  # The variable $PWD_PATHS can be set to a space-separated list of global
  # paths with a single capture group () each. Any of these paths which match
  # the base path of $PWD will be abbreviated as "//foo/bar" where the base
  # component has been removed and replaced with "//". The string in the
  # capture-group will be assigned to $PWD_NAME which can then be used in $PS1
  # below.
  local PWD_ARRAY
  local PWD_PATH
  local PWD_NAME
  local PWD_BASE
  read -r -a PWD_ARRAY <<< ${PWD_PATHS:=}

  # Rewrite $PWD using any of the paths in $PWD_ARRAY. See above for an
  # explanation of how this is used.
  for PWD_PATH in ${PWD_ARRAY[@]}; do
    local REGEX="^$PWD_PATH/?"
    if [[ $PWD =~ $REGEX ]]; then
      PWD_BASE=${BASH_REMATCH[0]}
      PWD_NAME=${BASH_REMATCH[1]}
      PWD="//${PWD#$PWD_BASE}"
      break
    fi
  done

  # Rewrite $PWD to translate $HOME into ~.
  if [[ $PWD == ${HOME}* ]]; then
    PWD="~${PWD#$HOME}"
  fi

  # The VCS branch/status of the current directory (if applicable).
  local BRANCH=""

  # First try and set $BRANCH using vcprompt if it exists. Otherwise fall back
  # on the git/hg command line tools.
  if [[ -n $(command -v vcprompt) ]]; then
    BRANCH=$(vcprompt -f "%b%d")

  else
    # Get the git branch/status; do this before mercurial because it's faster.
    if [[ -z "${BRANCH}" ]]; then
      BRANCH=$(git symbolic-ref --short HEAD 2> /dev/null)
      if [[ -n $BRANCH && -n $(git status --porcelain) ]]; then
        BRANCH+='*'
      fi
    fi

    # Get the mercurial branch/status.
    if [[ -z "${BRANCH}" ]]; then
      BRANCH=$(hg branch 2>/dev/null)
      if [[ -n $BRANCH && -n $(hg status) ]]; then
        BRANCH+='*'
      fi
    fi
  fi

  # Set up a few colors for setting the prompt.
  local RESET="\[\e[0;00m\]"
  local GREEN="\[\e[1;32m\]"
  local YELLOW="\[\e[1;33m\]"
  local BLUE="\[\e[1;34m\]"
  local CYAN="\[\e[1;36m\]"

  # User@Host.
  PS1="${YELLOW}\u@\h"

  # A name given to the PWD.
  if [[ -n $PWD_NAME ]]; then
    PS1="${PS1}${RESET}:${GREEN}${PWD_NAME}"
  fi

  # The PWD.
  PS1="${PS1}${RESET}:${BLUE}${PWD}"

  # The VCS branch name.
  if [[ -n ${BRANCH} ]]; then
    PS1="${PS1}${RESET}:${CYAN}${BRANCH}"
  fi

  # Trailing symbol.
  PS1="${PS1}${RESET}\$ "

  # Echo the window title.
  echo -en "\033]0;$(hostname -s):${PWD}\a"
}

PS1="\u@\h\$ "
PROMPT_COMMAND=_echo_ps1

